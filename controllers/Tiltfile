# -*- mode: Python -*-
settings = read_json('tilt-settings.json', default={})

load('ext://restart_process', 'docker_build_with_restart')
allow_k8s_contexts(settings.get("allowed_contexts"))
default_registry(settings.get('default_registry'))

IMG = 'cluster-controller:latest'
PROJECT_ROOT='./../'
CONTROLLERS_FOLDER = PROJECT_ROOT + 'controllers'
CONTROLLERS_BIN_FOLDER = CONTROLLERS_FOLDER + '/bin'
BIN_FOLDER = PROJECT_ROOT + 'bin'
API_FOLDER = PROJECT_ROOT + 'pkg/api'
CONFIG_FOLDER = PROJECT_ROOT + 'config'
KUSTOMIZE_TILT_FOLDER = CONFIG_FOLDER + '/tilt'
KUSTOMIZE_BIN = os.path.abspath(PROJECT_ROOT + 'hack/tools/bin/kustomize')
watch_settings(ignore=[KUSTOMIZE_TILT_FOLDER]) #ignore kustomize tilt folder to avoid infinite loop

def yaml():
    local('cd ' + KUSTOMIZE_TILT_FOLDER + ' && ' + KUSTOMIZE_BIN + ' edit set image controller=' + IMG)
    return kustomize(KUSTOMIZE_TILT_FOLDER)

def binary():
    return 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o ./bin/manager ' + CONTROLLERS_FOLDER + '/main.go'

local_resource(
  'eksa-controller-compile',
  binary(),
  deps=[CONTROLLERS_FOLDER, API_FOLDER],
  ignore=[CONTROLLERS_BIN_FOLDER, API_FOLDER + '/*/zz_generated.deepcopy.go'])

DOCKERFILE = '''FROM golang:alpine
WORKDIR /
COPY ./bin/manager /
CMD ["/manager"]
'''

k8s_yaml(yaml())

docker_build_with_restart(
	IMG,
	'.', 
	dockerfile_contents=DOCKERFILE,
	entrypoint='/manager',
	only=['./bin/manager'],
	live_update=[
		sync('./bin/manager', '/manager'),
	]
)