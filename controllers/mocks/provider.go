// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/controller/clusters/registry.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/aws/eks-anywhere/pkg/api/v1alpha1"
	controller "github.com/aws/eks-anywhere/pkg/controller"
	logr "github.com/go-logr/logr"
	gomock "github.com/golang/mock/gomock"
)

// MockProviderClusterReconciler is a mock of ProviderClusterReconciler interface.
type MockProviderClusterReconciler struct {
	ctrl     *gomock.Controller
	recorder *MockProviderClusterReconcilerMockRecorder
}

// MockProviderClusterReconcilerMockRecorder is the mock recorder for MockProviderClusterReconciler.
type MockProviderClusterReconcilerMockRecorder struct {
	mock *MockProviderClusterReconciler
}

// NewMockProviderClusterReconciler creates a new mock instance.
func NewMockProviderClusterReconciler(ctrl *gomock.Controller) *MockProviderClusterReconciler {
	mock := &MockProviderClusterReconciler{ctrl: ctrl}
	mock.recorder = &MockProviderClusterReconcilerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProviderClusterReconciler) EXPECT() *MockProviderClusterReconcilerMockRecorder {
	return m.recorder
}

// Reconcile mocks base method.
func (m *MockProviderClusterReconciler) Reconcile(ctx context.Context, log logr.Logger, cluster *v1alpha1.Cluster) (controller.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reconcile", ctx, log, cluster)
	ret0, _ := ret[0].(controller.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Reconcile indicates an expected call of Reconcile.
func (mr *MockProviderClusterReconcilerMockRecorder) Reconcile(ctx, log, cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reconcile", reflect.TypeOf((*MockProviderClusterReconciler)(nil).Reconcile), ctx, log, cluster)
}

// ReconcileWorkerNodes mocks base method.
func (m *MockProviderClusterReconciler) ReconcileWorkerNodes(ctx context.Context, log logr.Logger, cluster *v1alpha1.Cluster) (controller.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileWorkerNodes", ctx, log, cluster)
	ret0, _ := ret[0].(controller.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReconcileWorkerNodes indicates an expected call of ReconcileWorkerNodes.
func (mr *MockProviderClusterReconcilerMockRecorder) ReconcileWorkerNodes(ctx, log, cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileWorkerNodes", reflect.TypeOf((*MockProviderClusterReconciler)(nil).ReconcileWorkerNodes), ctx, log, cluster)
}
