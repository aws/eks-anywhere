version: 0.2

env:
  variables:
    INTEGRATION_TEST_MAX_EC2_COUNT: 180
    INTEGRATION_TEST_MAX_CONCURRENT_TEST_COUNT: 20
    EKSA_GIT_KNOWN_HOSTS: "/tmp/known_hosts"
    EKSA_GIT_PRIVATE_KEY: "/tmp/private-key"
    T_TINKERBELL_MAX_HARDWARE_PER_TEST: 4
    T_TINKERBELL_INVENTORY_CSV: "hardware-manifests/inventory.csv"
    T_TINKERBELL_BOOTSTRAP_INTERFACE: "ens192"
    TEST_RUNNER_GOVC_LIBRARY: "eks-a-templates"
    TEST_RUNNER_GOVC_TEMPLATE: "eks-a-admin-ci"
    INTEGRATION_TEST_INFRA_CONFIG: "/tmp/test-infra.yml"
  secrets-manager:
    EKSA_AWS_ACCESS_KEY_ID: "packages_ci_beta:aws_access_key_id"
    EKSA_AWS_SECRET_ACCESS_KEY: "packages_ci_beta:aws_secret_access_key_id"
    EKSA_AWS_REGION: "packages_ci_beta:aws_region"
    EKSA_GITHUB_TOKEN: "github-eks-anywhere-flux-bot:github-token"
    T_GITHUB_USER: "github-eks-anywhere-flux-bot:github-user"
    T_GIT_REPOSITORY: "github-eks-anywhere-flux-bot:github-repository"
    T_GIT_SSH_REPO_URL: "github-eks-anywhere-flux-bot:generic-git-repository-url"
    T_REGISTRY_MIRROR_ENDPOINT_TINKERBELL: "harbor-registry-data:tinkerbell_endpoint"
    T_REGISTRY_MIRROR_PORT_TINKERBELL: "harbor-registry-data:tinkerbell_port"
    T_REGISTRY_MIRROR_USERNAME_TINKERBELL: "harbor-registry-data:tinkerbell_username"
    T_REGISTRY_MIRROR_PASSWORD_TINKERBELL: "harbor-registry-data:tinkerbell_password"
    T_REGISTRY_MIRROR_CA_CERT_TINKERBELL: "harbor-registry-data:tinkerbell_caCert"
    T_PRIVATE_REGISTRY_MIRROR_ENDPOINT_TINKERBELL: "harbor-registry-data:authenticated_tinkerbell_endpoint"
    T_PRIVATE_REGISTRY_MIRROR_PORT_TINKERBELL: "harbor-registry-data:authenticated_tinkerbell_port"
    T_PRIVATE_REGISTRY_MIRROR_USERNAME_TINKERBELL: "harbor-registry-data:authenticated_tinkerbell_username"
    T_PRIVATE_REGISTRY_MIRROR_PASSWORD_TINKERBELL: "harbor-registry-data:authenticated_tinkerbell_password"
    T_PRIVATE_REGISTRY_MIRROR_CA_CERT_TINKERBELL: "harbor-registry-data:authenticated_tinkerbell_caCert"
    T_AWS_IAM_ROLE_ARN: "aws-iam-auth-role:ec2_role_arn"
    T_TINKERBELL_IMAGE_UBUNTU_1_24: "tinkerbell_ci:image_ubuntu_1_24"
    T_TINKERBELL_IMAGE_UBUNTU_1_25: "tinkerbell_ci:image_ubuntu_1_25"
    T_TINKERBELL_IMAGE_UBUNTU_1_26: "tinkerbell_ci:image_ubuntu_1_26"
    T_TINKERBELL_IMAGE_UBUNTU_1_27: "tinkerbell_ci:image_ubuntu_1_27"
    T_TINKERBELL_IMAGE_UBUNTU_1_28: "tinkerbell_ci:image_ubuntu_1_28"
    T_TINKERBELL_IMAGE_UBUNTU_2204_1_24: "tinkerbell_ci:image_ubuntu_2204_1_24"
    T_TINKERBELL_IMAGE_UBUNTU_2204_1_25: "tinkerbell_ci:image_ubuntu_2204_1_25"
    T_TINKERBELL_IMAGE_UBUNTU_2204_1_26: "tinkerbell_ci:image_ubuntu_2204_1_26"
    T_TINKERBELL_IMAGE_UBUNTU_2204_1_27: "tinkerbell_ci:image_ubuntu_2204_1_27"
    T_TINKERBELL_IMAGE_UBUNTU_2204_1_28: "tinkerbell_ci:image_ubuntu_2204_1_28"
    T_TINKERBELL_IMAGE_REDHAT_1_24: "tinkerbell_ci:image_redhat_1_24"
    T_TINKERBELL_IMAGE_REDHAT_1_25: "tinkerbell_ci:image_redhat_1_25"
    T_TINKERBELL_IMAGE_REDHAT_1_26: "tinkerbell_ci:image_redhat_1_26"
    T_TINKERBELL_IMAGE_REDHAT_1_27: "tinkerbell_ci:image_redhat_1_27"
    T_TINKERBELL_IMAGE_REDHAT_1_28: "tinkerbell_ci:image_redhat_1_28"
    T_TINKERBELL_SSH_AUTHORIZED_KEY: "vsphere_ci_beta_connection:ssh_authorized_key"
    T_TINKERBELL_CP_NETWORK_CIDR: "tinkerbell_ci:cp_network_cidr"
    T_TINKERBELL_S3_INVENTORY_CSV_KEY: "tinkerbell_ci:s3_inventory_csv"
    T_TINKERBELL_S3_AG_INVENTORY_CSV_KEY: "tinkerbell_ci:s3_ag_inventory_csv"
    BAREMETAL_BRANCH: "tinkerbell_ci:baremetal_branch"
    TEST_RUNNER_GOVC_USERNAME: "tinkerbell_ci:govc_username"
    TEST_RUNNER_GOVC_PASSWORD: "tinkerbell_ci:govc_password"
    TEST_RUNNER_GOVC_URL: "tinkerbell_ci:govc_url"
    TEST_RUNNER_GOVC_DATACENTER: "tinkerbell_ci:govc_datacenter"
    TEST_RUNNER_GOVC_DATASTORE: "tinkerbell_ci:govc_datastore"
    TEST_RUNNER_GOVC_RESOURCE_POOL: "tinkerbell_ci:govc_resource_pool"
    TEST_RUNNER_GOVC_NETWORK: "tinkerbell_ci:govc_network"
    TEST_RUNNER_GOVC_FOLDER: "tinkerbell_ci:govc_folder"
    T_HTTP_PROXY_TINKERBELL: "proxy-config-data:httpProxyTinkerbell"
    T_HTTPS_PROXY_TINKERBELL: "proxy-config-data:httpsProxyTinkerbell"
    T_NO_PROXY_TINKERBELL: "proxy-config-data:noProxyTinkerbell"
    T_TINKERBELL_BMC_CONSUMER_URL: "tinkerbell_ci:bmc_consumer_url"
    T_TINKERBELL_BMC_HMAC_SECRETS: "tinkerbell_ci:bmc_hmac_secrets"
    T_TINKERBELL_BMC_TIMESTAMP_HEADER: "tinkerbell_ci:bmc_timestamp_header"
    T_TINKERBELL_BMC_INCLUDED_PAYLOAD_HEADERS: "tinkerbell_ci:bmc_included_payload_headers"
phases:
  pre_build:
    commands:
      - source ${CODEBUILD_SRC_DIR}/cmd/integration_test/build/script/setup_profile.sh
      - source ${CODEBUILD_SRC_DIR}/cmd/integration_test/build/script/create_infra_config.sh
      - ${CODEBUILD_SRC_DIR}/cmd/integration_test/build/script/start_docker.sh
      - |
        if ! [[ ${CODEBUILD_INITIATOR} =~ "codepipeline" ]]; then
          make build-eks-a-for-e2e build-integration-test-binary e2e-tests-binary E2E_TAGS="e2e tinkerbell" E2E_OUTPUT_FILE=bin/tinkerbell/e2e.test
        fi
  build:
    commands:
      - export JOB_ID=$CODEBUILD_BUILD_ID
      - BUNDLES_OVERRIDE=false
      - |
        if [ -f ./bin/local-bundle-release.yaml ]; then
          BUNDLES_OVERRIDE=true
        fi
      - SKIPPED_TESTS=$(yq e ".skipped_tests | @csv" ${CODEBUILD_SRC_DIR}/test/e2e/SKIPPED_TESTS.yaml)
      - mv bin/tinkerbell/e2e.test bin/e2e.test
      - >
        ./bin/test e2e run
        -c ${INTEGRATION_TEST_INFRA_CONFIG}
        -s ${INTEGRATION_TEST_STORAGE_BUCKET}
        -j ${JOB_ID}
        -i ${INTEGRATION_TEST_INSTANCE_PROFILE}
        -m ${INTEGRATION_TEST_MAX_EC2_COUNT}
        -p ${INTEGRATION_TEST_MAX_CONCURRENT_TEST_COUNT}
        -r 'Test'
        -v 4
        --skip ${SKIPPED_TESTS}
        --bundles-override=${BUNDLES_OVERRIDE}
        --cleanup-vms=true
        --test-report-folder=reports
        --branch-name=${BRANCH_NAME}
        --baremetal-branch=${BAREMETAL_BRANCH}
reports:
  e2e-reports:
    files:
      - reports/junit-testing-*.xml
    file-format: "JUNITXML"
