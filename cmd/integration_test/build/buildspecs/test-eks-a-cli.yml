version: 0.2

env:
  variables:
    INTEGRATION_TEST_MAX_EC2_COUNT: 120
    INTEGRATION_TEST_MAX_CONCURRENT_TEST_COUNT: 120
    T_VSPHERE_CIDR: "198.18.128.0/17"
    T_VSPHERE_PRIVATE_NETWORK_CIDR: "197.18.128.0/17"
    SKIPPED_TESTS: "TestTinkerbellKubernetes120SimpleFlow,TestTinkerbellKubernetes121ThreeReplicasTwoWorkersSimpleFlow,TestTinkerbellKubernetes121DellSimpleFlow,TestTinkerbellKubernetes121HPSimpleFlow,TestTinkerbellKubernetes121SuperMicroSimpleFlow,TestTinkerbellKubernetes121ExternalEtcdSimpleFlow,TestTinkerbellKubernetes121ExternalEtcdThreeReplicasTwoWorkersSimpleFlow"
  secrets-manager:
    EKSA_VSPHERE_USERNAME: "vsphere_ci_beta_connection:vsphere_username"
    EKSA_VSPHERE_PASSWORD: "vsphere_ci_beta_connection:vsphere_password"
    GOVC_URL: "vsphere_ci_beta_connection:vsphere_url"
    GOVC_USERNAME: "vsphere_ci_beta_connection:vsphere_username"
    GOVC_PASSWORD: "vsphere_ci_beta_connection:vsphere_password"
    GOVC_INSECURE: "vsphere_ci_beta_connection:govc_insecure"
    T_VSPHERE_DATACENTER: "vsphere_ci_beta_connection:vsphere_datacenter"
    T_VSPHERE_DATASTORE: "vsphere_ci_beta_connection:datastore"
    T_VSPHERE_FOLDER: "vsphere_ci_beta_connection:folder"
    T_VSPHERE_NETWORK: "vsphere_ci_beta_connection:network"
    T_VSPHERE_PRIVATE_NETWORK: "vsphere_ci_beta_connection:private_network"
    T_VSPHERE_RESOURCE_POOL: "vsphere_ci_beta_connection:resource_pool"
    T_VSPHERE_SERVER: "vsphere_ci_beta_connection:server"
    T_VSPHERE_SSH_AUTHORIZED_KEY: "vsphere_ci_beta_connection:ssh_authorized_key"
    T_VSPHERE_TEMPLATE_UBUNTU_1_18: "vsphere_ci_beta_connection:template_18"
    T_VSPHERE_TEMPLATE_UBUNTU_1_19: "vsphere_ci_beta_connection:template_19"
    T_VSPHERE_TEMPLATE_UBUNTU_1_20: "vsphere_ci_beta_connection:template_20"
    T_VSPHERE_TEMPLATE_UBUNTU_1_21: "vsphere_ci_beta_connection:template_21"
    T_VSPHERE_TEMPLATE_UBUNTU_1_22: "vsphere_ci_beta_connection:template_22"
    T_VSPHERE_TEMPLATE_BR_1_20: "vsphere_ci_beta_connection:template_br_20"
    T_VSPHERE_TEMPLATE_BR_1_21: "vsphere_ci_beta_connection:template_br_21"
    T_VSPHERE_TEMPLATE_BR_1_22: "vsphere_ci_beta_connection:template_br_22"
    T_VSPHERE_TLS_INSECURE: "vsphere_ci_beta_connection:tls_insecure"
    T_VSPHERE_TLS_THUMBPRINT: "vsphere_ci_beta_connection:tls_thumbprint"
    EKSA_GITHUB_TOKEN: "github-eks-anywhere-flux-bot:github-token"
    T_GITHUB_USER: "github-eks-anywhere-flux-bot:github-user"
    T_GIT_REPOSITORY: "github-eks-anywhere-flux-bot:github-repository"
    T_HTTP_PROXY: "proxy-config-data:httpProxy"
    T_HTTPS_PROXY: "proxy-config-data:httpsProxy"
    T_NO_PROXY: "proxy-config-data:noProxy"
    T_REGISTRY_MIRROR_ENDPOINT: "harbor-registry-data:endpoint"
    T_REGISTRY_MIRROR_PORT: "harbor-registry-data:port"
    T_REGISTRY_MIRROR_USERNAME: "harbor-registry-data:username"
    T_REGISTRY_MIRROR_PASSWORD: "harbor-registry-data:password"
    T_REGISTRY_MIRROR_CA_CERT: "harbor-registry-data:caCert"
    T_AWS_IAM_ROLE_ARN: "aws-iam-auth-role:ec2_role_arn"

phases:
  pre_build:
    commands:
      - source ${CODEBUILD_SRC_DIR}/cmd/integration_test/build/script/setup_profile.sh
      - ${CODEBUILD_SRC_DIR}/cmd/integration_test/build/script/start_docker.sh
  build:
    commands:
      - export JOB_ID=$CODEBUILD_BUILD_ID
      - BUNDLES_OVERRIDE=false
      - |
        if [ -f ./bin/local-bundle-release.yaml ]; then
          BUNDLES_OVERRIDE=true
        fi
      - >
        ./bin/test e2e run
        -a ${INTEGRATION_TEST_AL2_AMI_ID}
        -s ${INTEGRATION_TEST_STORAGE_BUCKET}
        -j ${JOB_ID}
        -i ${INTEGRATION_TEST_INSTANCE_PROFILE}
        -n ${INTEGRATION_TEST_SUBNET_ID}
        -m ${INTEGRATION_TEST_MAX_EC2_COUNT}
        -c ${INTEGRATION_TEST_MAX_CONCURRENT_TEST_COUNT}
        -r 'Test'
        -v 4
        --skip ${SKIPPED_TESTS}
        --bundles-override=${BUNDLES_OVERRIDE}
        --cleanup-vms=true
        --test-report-folder=reports
        --branch-name=${BRANCH_NAME}
  post_build:
    commands:
      - unset AWS_SDK_LOAD_CONFIG AWS_PROFILE
      - export GIT_HASH=$(cat bin/githash)
      - >
        ./cmd/integration_test/build/script/upload_artifacts.sh
        $ARTIFACTS_BUCKET
        $CODEBUILD_SRC_DIR
        "eks-a-cli"
        $CODEBUILD_BUILD_NUMBER
        $GIT_HASH
        "linux,darwin"
        "amd64"
        false
      - >
        ./bin/test e2e cleanup vsphere
        -n ${BRANCH_NAME}
        -v 4
reports:
  e2e-reports:
    files:
      - reports/junit-testing-*.xml
    file-format: "JUNITXML"
