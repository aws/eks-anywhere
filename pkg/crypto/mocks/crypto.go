// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/crypto/certificategen.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCertificateGenerator is a mock of CertificateGenerator interface.
type MockCertificateGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockCertificateGeneratorMockRecorder
}

// MockCertificateGeneratorMockRecorder is the mock recorder for MockCertificateGenerator.
type MockCertificateGeneratorMockRecorder struct {
	mock *MockCertificateGenerator
}

// NewMockCertificateGenerator creates a new mock instance.
func NewMockCertificateGenerator(ctrl *gomock.Controller) *MockCertificateGenerator {
	mock := &MockCertificateGenerator{ctrl: ctrl}
	mock.recorder = &MockCertificateGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCertificateGenerator) EXPECT() *MockCertificateGeneratorMockRecorder {
	return m.recorder
}

// GenerateIamAuthSelfSignCertKeyPair mocks base method.
func (m *MockCertificateGenerator) GenerateIamAuthSelfSignCertKeyPair() ([]byte, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateIamAuthSelfSignCertKeyPair")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateIamAuthSelfSignCertKeyPair indicates an expected call of GenerateIamAuthSelfSignCertKeyPair.
func (mr *MockCertificateGeneratorMockRecorder) GenerateIamAuthSelfSignCertKeyPair() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateIamAuthSelfSignCertKeyPair", reflect.TypeOf((*MockCertificateGenerator)(nil).GenerateIamAuthSelfSignCertKeyPair))
}
