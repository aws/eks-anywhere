// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/eks-anywhere/pkg/validations (interfaces: DockerExecutable)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDockerExecutable is a mock of DockerExecutable interface.
type MockDockerExecutable struct {
	ctrl     *gomock.Controller
	recorder *MockDockerExecutableMockRecorder
}

// MockDockerExecutableMockRecorder is the mock recorder for MockDockerExecutable.
type MockDockerExecutableMockRecorder struct {
	mock *MockDockerExecutable
}

// NewMockDockerExecutable creates a new mock instance.
func NewMockDockerExecutable(ctrl *gomock.Controller) *MockDockerExecutable {
	mock := &MockDockerExecutable{ctrl: ctrl}
	mock.recorder = &MockDockerExecutableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDockerExecutable) EXPECT() *MockDockerExecutableMockRecorder {
	return m.recorder
}

// AllocatedMemory mocks base method.
func (m *MockDockerExecutable) AllocatedMemory(arg0 context.Context) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllocatedMemory", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllocatedMemory indicates an expected call of AllocatedMemory.
func (mr *MockDockerExecutableMockRecorder) AllocatedMemory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllocatedMemory", reflect.TypeOf((*MockDockerExecutable)(nil).AllocatedMemory), arg0)
}

// Version mocks base method.
func (m *MockDockerExecutable) Version(arg0 context.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Version", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Version indicates an expected call of Version.
func (mr *MockDockerExecutableMockRecorder) Version(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Version", reflect.TypeOf((*MockDockerExecutable)(nil).Version), arg0)
}
