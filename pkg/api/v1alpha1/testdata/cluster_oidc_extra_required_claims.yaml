apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: Cluster
metadata:
  name: eksa-unit-test
spec:
  controlPlaneConfiguration:
    count: 3
    endpoint:
      host: test-ip
    machineGroupRef:
      name: eksa-unit-test
      kind: VSphereMachineConfig
  kubernetesVersion: "1.19"
  workerNodeGroupConfigurations:
    - count: 3
      machineGroupRef:
        name: eksa-unit-test
        kind: VSphereMachineConfig
  datacenterRef:
    kind: VSphereDatacenterConfig
    name: eksa-unit-test
  identityProviderRefs:
  - kind: OIDCConfig
    name: eksa-unit-test
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: VSphereMachineConfig
metadata:
  name: eksa-unit-test
spec:
  diskGiB: 25
  datastore: "myDatastore"
  folder: "myFolder"
  memoryMiB: 8192
  numCPUs: 2
  osFamily: "ubuntu"
  resourcePool: "myResourcePool"
  storagePolicyName: "myStoragePolicyName"
  template: "myTemplate"
  users:
    - name: "mySshUsername"
      sshAuthorizedKeys:
        - "mySshAuthorizedKey"
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: VSphereDatacenterConfig
metadata:
  name: eksa-unit-test
spec:
  datacenter: "myDatacenter"
  network: "myNetwork"
  server: "myServer"
  thumbprint: "myTlsThumbprint"
  insecure: false
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: OIDCConfig
metadata:
  name: eksa-unit-test
spec:
  clientId: id11
  groupsClaim: claim1
  groupsPrefix: prefix-for-groups
  issuerUrl: https://mydomain.com/issuer
  requiredClaims:
    - claim: sub
      value: test
    - claim: sub2
      value: test2
  usernameClaim: username-claim
  usernamePrefix: username-prefix
