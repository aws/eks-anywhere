// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/nutanix/validator.go

// Package nutanix is a generated GoMock package.
package nutanix

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTLSCertValidator is a mock of TLSCertValidator interface.
type MockTLSCertValidator struct {
	ctrl     *gomock.Controller
	recorder *MockTLSCertValidatorMockRecorder
}

// MockTLSCertValidatorMockRecorder is the mock recorder for MockTLSCertValidator.
type MockTLSCertValidatorMockRecorder struct {
	mock *MockTLSCertValidator
}

// NewMockTLSCertValidator creates a new mock instance.
func NewMockTLSCertValidator(ctrl *gomock.Controller) *MockTLSCertValidator {
	mock := &MockTLSCertValidator{ctrl: ctrl}
	mock.recorder = &MockTLSCertValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTLSCertValidator) EXPECT() *MockTLSCertValidatorMockRecorder {
	return m.recorder
}

// ValidateCert mocks base method.
func (m *MockTLSCertValidator) ValidateCert(host, port, cert string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCert", host, port, cert)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateCert indicates an expected call of ValidateCert.
func (mr *MockTLSCertValidatorMockRecorder) ValidateCert(host, port, cert interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCert", reflect.TypeOf((*MockTLSCertValidator)(nil).ValidateCert), host, port, cert)
}
