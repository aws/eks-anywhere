// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/vsphere/internal/templates/factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/aws/eks-anywhere/pkg/api/v1alpha1"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudMonkeyClient is a mock of GovcClient interface.
type MockCloudMonkeyClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudMonkeyClientMockRecorder
}

// MockCloudMonkeyClientMockRecorder is the mock recorder for MockCloudMonkeyClient.
type MockCloudMonkeyClientMockRecorder struct {
	mock *MockCloudMonkeyClient
}

// NewMockCloudMonkeyClient creates a new mock instance.
func NewMockCloudMonkeyClient(ctrl *gomock.Controller) *MockCloudMonkeyClient {
	mock := &MockCloudMonkeyClient{ctrl: ctrl}
	mock.recorder = &MockCloudMonkeyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudMonkeyClient) EXPECT() *MockCloudMonkeyClientMockRecorder {
	return m.recorder
}

// AddTag mocks base method.
func (m *MockCloudMonkeyClient) AddTag(ctx context.Context, path, tag string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTag", ctx, path, tag)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTag indicates an expected call of AddTag.
func (mr *MockCloudMonkeyClientMockRecorder) AddTag(ctx, path, tag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTag", reflect.TypeOf((*MockCloudMonkeyClient)(nil).AddTag), ctx, path, tag)
}

// SearchTemplate mocks base method.
func (m *MockCloudMonkeyClient) SearchTemplate(ctx context.Context, domain string, zone string, account string, template string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchTemplate", ctx, domain, zone, account, template)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchTemplate indicates an expected call of SearchTemplate.
func (mr *MockCloudMonkeyClientMockRecorder) SearchTemplate(ctx, domain, zone, account, template interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchTemplate", reflect.TypeOf((*MockCloudMonkeyClient)(nil).SearchTemplate), ctx, domain, zone, account, template)
}

// SearchComputeOffering mocks base method
func (m *MockCloudMonkeyClient) SearchComputeOffering(ctx context.Context, domain string, zone string, account string, computeOffering string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchComputeOffering", ctx, domain, zone, account, computeOffering)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchComputeOffering indicates an expected call of SearchComputeOffering.
func (mr *MockCloudMonkeyClientMockRecorder) SearchComputeOffering(ctx, domain, zone, account, computeOffering interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchComputeOffering", reflect.TypeOf((*MockCloudMonkeyClient)(nil).SearchComputeOffering), ctx, domain, zone, account, computeOffering)
}

// SearchDiskOffering mocks base method
func (m *MockCloudMonkeyClient) SearchDiskOffering(ctx context.Context, domain string, zone string, account string, diskOffering string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchDiskOffering", ctx, domain, zone, account, diskOffering)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchDiskOffering indicates an expected call of SearchDiskOffering.
func (mr *MockCloudMonkeyClientMockRecorder) SearchDiskOffering(ctx, domain, zone, account, diskOffering interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchDiskOffering", reflect.TypeOf((*MockCloudMonkeyClient)(nil).SearchDiskOffering), ctx, domain, zone, account, diskOffering)
}

// ValidateCloudStackSetup mocks base method
func (m *MockCloudMonkeyClient) ValidateCloudStackSetup(ctx context.Context, deploymentConfig *v1alpha1.CloudStackDeploymentConfig, selfSigned *bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCloudStackSetup", ctx, deploymentConfig, selfSigned)
	return ret[0].(error)
}

// ValidateCloudStackSetup indicates an expected call of ValidateCloudStackSetup.
func (mr *MockCloudMonkeyClientMockRecorder) ValidateCloudStackSetup(ctx, deploymentConfig, selfSigned interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCloudStackSetup", reflect.TypeOf((*MockCloudMonkeyClient)(nil).ValidateCloudStackSetup), ctx, deploymentConfig, selfSigned)
}

// ValidateCloudStackSetupMachineConfig mocks basemethod
func (m *MockCloudMonkeyClient) ValidateCloudStackSetupMachineConfig(ctx context.Context, deploymentConfig *v1alpha1.CloudStackDeploymentConfig, machineConfig *v1alpha1.CloudStackMachineConfig, selfSigned *bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCloudStackSetupMachineConfig", ctx, deploymentConfig, machineConfig, selfSigned)
	return ret[0].(error)
}

// ValidateCloudStackSetupMachineConfig indicates an expected call of ValidateCloudStackSetupMachineConfig.
func (mr *MockCloudMonkeyClientMockRecorder) ValidateCloudStackSetupMachineConfig(ctx, deploymentConfig, machineConfig, selfSigned interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCloudStackSetupMachineConfig", reflect.TypeOf((*MockCloudMonkeyClient)(nil).ValidateCloudStackSetupMachineConfig), ctx, deploymentConfig, machineConfig, selfSigned)
}
