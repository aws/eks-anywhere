apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: test
  name: test
  namespace: eksa-system
spec:
  clusterNetwork:
    pods:
      cidrBlocks: [192.168.0.0/16]
    services:
      cidrBlocks: [10.96.0.0/12]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: test
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: CloudStackCluster
    name: test
  managedExternalEtcdRef:
    apiVersion: etcdcluster.cluster.x-k8s.io/v1beta1
    kind: EtcdadmCluster
    name: test-etcd
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackCluster
metadata:
  name: test
  namespace: eksa-system
spec:
  controlPlaneEndpoint:
    host: 1.2.3.4
    port: 6443
  zones:
    - network:
        name: net1
      name: zone1
  domain: domain1
  account: admin
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackMachineTemplate
metadata:
  name: test-control-plane-template-1234567890000
  namespace: eksa-system
spec:
  template:
    spec:
      offering:
        name: m4-large
      template:
        name: centos7-k8s-118
      affinitygroupids:
      - control-plane-anti-affinity
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: test
  namespace: eksa-system
spec:
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: CloudStackMachineTemplate
      name: test-control-plane-template-1234567890000
  kubeadmConfigSpec:
    clusterConfiguration:
      imageRepository: public.ecr.aws/eks-distro/kubernetes
      etcd:
        external:
          endpoints: []
          caFile: "/etc/kubernetes/pki/etcd/ca.crt"
          certFile: "/etc/kubernetes/pki/apiserver-etcd-client.crt"
          keyFile: "/etc/kubernetes/pki/apiserver-etcd-client.key"
      dns:
        imageRepository: public.ecr.aws/eks-distro/coredns
        imageTag: v1.8.3-eks-1-21-4
      apiServer:
        extraArgs:
          cloud-provider: external
          audit-policy-file: /etc/kubernetes/audit-policy.yaml
          audit-log-path: /var/log/kubernetes/api-audit.log
          audit-log-maxage: "30"
          audit-log-maxbackup: "10"
          audit-log-maxsize: "512"
          profiling: "false"
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        extraVolumes:
        - hostPath: /etc/kubernetes/audit-policy.yaml
          mountPath: /etc/kubernetes/audit-policy.yaml
          name: audit-policy
          pathType: File
          readOnly: true
        - hostPath: /var/log/kubernetes
          mountPath: /var/log/kubernetes
          name: audit-log-dir
          pathType: DirectoryOrCreate
          readOnly: false
      controllerManager:
        extraArgs:
          cloud-provider: external
          profiling: "false"
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      scheduler:
        extraArgs:
          profiling: "false"
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    files:
    - content: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_cidr
              value: "32"
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: vip_ddns
              value: "false"
            - name: vip_leaderelection
              value: "true"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            - name: address
              value: 1.2.3.4
            image: public.ecr.aws/l0g8r8j6/plunder-app/kube-vip:v0.3.7-eks-a-v0.0.0-dev-build.158
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
            name: kubeconfig
        status: {}
      owner: root:root
      path: /etc/kubernetes/manifests/kube-vip.yaml
    - content: |
        apiVersion: audit.k8s.io/v1beta1
        kind: Policy
        rules:
        # Log aws-auth configmap changes
        - level: RequestResponse
          namespaces: ["kube-system"]
          verbs: ["update", "patch", "delete"]
          resources:
          - group: "" # core
            resources: ["configmaps"]
            resourceNames: ["aws-auth"]
          omitStages:
          - "RequestReceived"
        # The following requests were manually identified as high-volume and low-risk,
        # so drop them.
        - level: None
          users: ["system:kube-proxy"]
          verbs: ["watch"]
          resources:
          - group: "" # core
            resources: ["endpoints", "services", "services/status"]
        - level: None
          users: ["kubelet"] # legacy kubelet identity
          verbs: ["get"]
          resources:
          - group: "" # core
            resources: ["nodes", "nodes/status"]
        - level: None
          userGroups: ["system:nodes"]
          verbs: ["get"]
          resources:
          - group: "" # core
            resources: ["nodes", "nodes/status"]
        - level: None
          users:
          - system:kube-controller-manager
          - system:kube-scheduler
          - system:serviceaccount:kube-system:endpoint-controller
          verbs: ["get", "update"]
          namespaces: ["kube-system"]
          resources:
          - group: "" # core
            resources: ["endpoints"]
        - level: None
          users: ["system:apiserver"]
          verbs: ["get"]
          resources:
          - group: "" # core
            resources: ["namespaces", "namespaces/status", "namespaces/finalize"]
        # Don't log HPA fetching metrics.
        - level: None
          users:
          - system:kube-controller-manager
          verbs: ["get", "list"]
          resources:
          - group: "metrics.k8s.io"
        # Don't log these read-only URLs.
        - level: None
          nonResourceURLs:
          - /healthz*
          - /version
          - /swagger*
        # Don't log events requests.
        - level: None
          resources:
          - group: "" # core
            resources: ["events"]
        # node and pod status calls from nodes are high-volume and can be large, don't log responses for expected updates from nodes
        - level: Request
          users: ["kubelet", "system:node-problem-detector", "system:serviceaccount:kube-system:node-problem-detector"]
          verbs: ["update","patch"]
          resources:
          - group: "" # core
            resources: ["nodes/status", "pods/status"]
          omitStages:
          - "RequestReceived"
        - level: Request
          userGroups: ["system:nodes"]
          verbs: ["update","patch"]
          resources:
          - group: "" # core
            resources: ["nodes/status", "pods/status"]
          omitStages:
          - "RequestReceived"
        # deletecollection calls can be large, don't log responses for expected namespace deletions
        - level: Request
          users: ["system:serviceaccount:kube-system:namespace-controller"]
          verbs: ["deletecollection"]
          omitStages:
          - "RequestReceived"
        # Secrets, ConfigMaps, and TokenReviews can contain sensitive & binary data,
        # so only log at the Metadata level.
        - level: Metadata
          resources:
          - group: "" # core
            resources: ["secrets", "configmaps"]
          - group: authentication.k8s.io
            resources: ["tokenreviews"]
          omitStages:
            - "RequestReceived"
        - level: Request
          resources:
          - group: ""
            resources: ["serviceaccounts/token"]
        # Get repsonses can be large; skip them.
        - level: Request
          verbs: ["get", "list", "watch"]
          resources:
          - group: "" # core
          - group: "admissionregistration.k8s.io"
          - group: "apiextensions.k8s.io"
          - group: "apiregistration.k8s.io"
          - group: "apps"
          - group: "authentication.k8s.io"
          - group: "authorization.k8s.io"
          - group: "autoscaling"
          - group: "batch"
          - group: "certificates.k8s.io"
          - group: "extensions"
          - group: "metrics.k8s.io"
          - group: "networking.k8s.io"
          - group: "policy"
          - group: "rbac.authorization.k8s.io"
          - group: "scheduling.k8s.io"
          - group: "settings.k8s.io"
          - group: "storage.k8s.io"
          omitStages:
          - "RequestReceived"
        # Default level for known APIs
        - level: RequestResponse
          resources:
          - group: "" # core
          - group: "admissionregistration.k8s.io"
          - group: "apiextensions.k8s.io"
          - group: "apiregistration.k8s.io"
          - group: "apps"
          - group: "authentication.k8s.io"
          - group: "authorization.k8s.io"
          - group: "autoscaling"
          - group: "batch"
          - group: "certificates.k8s.io"
          - group: "extensions"
          - group: "metrics.k8s.io"
          - group: "networking.k8s.io"
          - group: "policy"
          - group: "rbac.authorization.k8s.io"
          - group: "scheduling.k8s.io"
          - group: "settings.k8s.io"
          - group: "storage.k8s.io"
          omitStages:
          - "RequestReceived"
        # Default level for all other requests.
        - level: Metadata
          omitStages:
          - "RequestReceived"
      owner: root:root
      path: /etc/kubernetes/audit-policy.yaml
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          provider-id: cloudstack:///'{{ ds.meta_data.instance_id }}'
          read-only-port: "0"
          anonymous-auth: "false"
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        name: '{{ ds.meta_data.local_hostname }}'
        taints: []
    joinConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          provider-id: cloudstack:///'{{ ds.meta_data.instance_id }}'
          read-only-port: "0"
          anonymous-auth: "false"
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        name: '{{ ds.meta_data.local_hostname }}'
        taints: []
    preKubeadmCommands:
    - swapoff -a
    - hostname "{{ ds.meta_data.local_hostname }}"
    - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
    - echo "127.0.0.1   localhost" >>/etc/hosts
    - echo "127.0.0.1   {{ ds.meta_data.local_hostname }}" >>/etc/hosts
    - echo "{{ ds.meta_data.local_hostname }}" >/etc/hostname
    useExperimentalRetryJoin: true
    users:
    - name: cp-user
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCJ3/Gfmet+hjK/mW2fREc3qYxby/Q3gGRp4hDPTgWpDY6i94uX5x+ZNudgJ3HxHqCIoSwLoZWP2chIdguW9ATovdRHEVJmrogP+JY/g6F3Q1U8XL5JSgY7xGq3VBp3+W0/zg518URDMpl4Sdj+SRpyvsSwA/z/K180o7ZGRjAUGc4uvi41PG0D/CNyrpBOT3h6glb7Lme+tmKh7Vrsx+/L7OmR35Rd8ml32Q4Imwfw364kdQVJh56El6sQ7bcgIbXj1qTr62/uQD4lifSIClQgZP3bTbPO5Xm1Mmgbj4QLzQAG4YBEpniBkmZQ16Vaw0mKRbAkjkiu4lyXFHFtWfTb'
    - name: cp-user2
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+4yVx1dSbm56UAZcdsPFGktKOz1PIYkkRBpvEncMRIoRH6gKMcKflqxlgtxFYVPvJBpHkmci6NGvoz2gXSvohrNENT43eIQ+25VDK3iTgJhYbSpvjta2CMmNtRxc9D2C3zVZEt/olrvLuHa4kc42ptpyeJ9mgVXqwmezGoa6+C1wjov4Bip1vr1Xm9q68usOj8Ht5blo0fZE2cYi/rFC2+R022PO4bW7dn3OwMGLr6BeeWUA7i7a9xd3gCUPKYZPWmieFM9R8R7b1Kgy8CjZ9+XXFsyt/1UqXSZ6pKhcaQ5Ubc99Ws6aoImvCrm7XMKb12qztH0g67KYPRV0hsFNL'
    - name: cp-user3
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCBdZuhnkn0UlZjoO6S/s+UYLxRHKamdZJ8Iyqs1d0Vu2BP5wDC+d6SfMb8lLz3Hefn54hQr9lWM/9o3tPyallPG/eVJ4xZJykG8V7OlCx4m2HiNMMf4+cb8dGekp6DMA99oAGWrB/6fcAQf3iZ3Khc2VbpBirkYMHt7xMAFs1rrB8ExaC4UDS72hc+vy5PdrINfAgbV3pIMGk6lDcAHI8iQiiU2X+Yaq0CtHS7j5vPmHpJPp+LTaoWKRfG9R7XqFf3tkm3EAzXJihOuZ4+sVIcEupm4mEH9zdUauJTqAoR7BigSEbAs0k5PB44CpbBwen8ifJnWMn64Qa/nPFd35kr'
      sudo: ALL=(ALL) NOPASSWD:ALL
    format: cloud-config
  replicas: 3
  version: v1.21.2-eks-1-21-4
---
kind: EtcdadmCluster
apiVersion: etcdcluster.cluster.x-k8s.io/v1beta1
metadata:
  name: test-etcd
  namespace: eksa-system
spec:
  replicas: 3
  etcdadmConfigSpec:
    etcdadmBuiltin: true
    format: cloud-config
    cloudInitConfig:
      version: 3.4.16
      installDir: "/usr/bin"
    preEtcdadmCommands:
    - swapoff -a
    - hostname "{{ ds.meta_data.local_hostname }}"
    - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
    - echo "127.0.0.1   localhost" >>/etc/hosts
    - echo "127.0.0.1   {{ ds.meta_data.local_hostname }}" >>/etc/hosts
    - echo "{{ ds.meta_data.local_hostname }}" >/etc/hostname
    cipherSuites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    users:
    - name: etcd-user
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCJ3/Gfmet+hjK/mW2fREc3qYxby/Q3gGRp4hDPTgWpDY6i94uX5x+ZNudgJ3HxHqCIoSwLoZWP2chIdguW9ATovdRHEVJmrogP+JY/g6F3Q1U8XL5JSgY7xGq3VBp3+W0/zg518URDMpl4Sdj+SRpyvsSwA/z/K180o7ZGRjAUGc4uvi41PG0D/CNyrpBOT3h6glb7Lme+tmKh7Vrsx+/L7OmR35Rd8ml32Q4Imwfw364kdQVJh56El6sQ7bcgIbXj1qTr62/uQD4lifSIClQgZP3bTbPO5Xm1Mmgbj4QLzQAG4YBEpniBkmZQ16Vaw0mKRbAkjkiu4lyXFHFtWfTb'
    - name: etcd-user2
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+4yVx1dSbm56UAZcdsPFGktKOz1PIYkkRBpvEncMRIoRH6gKMcKflqxlgtxFYVPvJBpHkmci6NGvoz2gXSvohrNENT43eIQ+25VDK3iTgJhYbSpvjta2CMmNtRxc9D2C3zVZEt/olrvLuHa4kc42ptpyeJ9mgVXqwmezGoa6+C1wjov4Bip1vr1Xm9q68usOj8Ht5blo0fZE2cYi/rFC2+R022PO4bW7dn3OwMGLr6BeeWUA7i7a9xd3gCUPKYZPWmieFM9R8R7b1Kgy8CjZ9+XXFsyt/1UqXSZ6pKhcaQ5Ubc99Ws6aoImvCrm7XMKb12qztH0g67KYPRV0hsFNL'
    - name: etcd-user3
      sshAuthorizedKeys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCBdZuhnkn0UlZjoO6S/s+UYLxRHKamdZJ8Iyqs1d0Vu2BP5wDC+d6SfMb8lLz3Hefn54hQr9lWM/9o3tPyallPG/eVJ4xZJykG8V7OlCx4m2HiNMMf4+cb8dGekp6DMA99oAGWrB/6fcAQf3iZ3Khc2VbpBirkYMHt7xMAFs1rrB8ExaC4UDS72hc+vy5PdrINfAgbV3pIMGk6lDcAHI8iQiiU2X+Yaq0CtHS7j5vPmHpJPp+LTaoWKRfG9R7XqFf3tkm3EAzXJihOuZ4+sVIcEupm4mEH9zdUauJTqAoR7BigSEbAs0k5PB44CpbBwen8ifJnWMn64Qa/nPFd35kr'
      sudo: ALL=(ALL) NOPASSWD:ALL
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: CloudStackMachineTemplate
    name: test-etcd-template-1234567890000
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackMachineTemplate
metadata:
  name: test-etcd-template-1234567890000
  namespace: 'eksa-system'
spec:
  template:
    spec:
      offering:
        name: m4-large
      template:
        name: centos7-k8s-118
      affinitygroupids:
      - etcd-affinity
