apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: {{.clusterName}}
  namespace: default
spec:
  clusterNetwork:
    apiServerPort: 443
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: {{.clusterName}}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSCluster
    name: {{.clusterName}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSCluster
metadata:
  name: {{.clusterName}}
  namespace: default
spec:
  region: {{.region}}
  sshKeyName: default
  networkSpec:
    cni:
      cniIngressRules:
        # https://docs.cilium.io/en/v1.9/operations/system_requirements/
        - description: etcd access (cilium)
          fromPort: 2379
          protocol: tcp
          toPort: 2380
        - description: VXLAN overlay (cilium)
          fromPort: 8472
          protocol: udp
          toPort: 8472
        - description: health checks (cilium)
          fromPort: 4240
          protocol: tcp
          toPort: 4240
        - description: health checks (cilium)
          fromPort: 0
          protocol: icmp
          toPort: 0
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: {{.clusterName}}-control-plane
  namespace: default
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSMachineTemplate
    name: {{.controlPlaneTemplateName}}
  kubeadmConfigSpec:
    clusterConfiguration:
      imageRepository: {{.kubernetesRepository}}
      etcd:
        local:
          imageRepository: {{.etcdRepository}}
          imageTag: {{.etcdVersion}}
      dns:
        type: CoreDNS
        imageRepository: {{.corednsRepository}}
        imageTag: {{.corednsVersion}}
      apiServer:
        extraArgs:
          cloud-provider: aws
{{- if .extraArgs }}
{{ .extraArgs.ToYaml | indent 10 }}
{{- end }}
      controllerManager:
        extraArgs:
          cloud-provider: aws
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{"{{"}} ds.meta_data.local_hostname {{"}}"}}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{"{{"}} ds.meta_data.local_hostname {{"}}"}}'
  replicas: {{.controlPlaneReplicas}}
  version: {{.kubernetesVersion}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachineTemplate
metadata:
  name: {{.controlPlaneTemplateName}}
  namespace: default
spec:
  template:
    spec:
      iamInstanceProfile: {{.clusterName}}-control-plane.cluster-api-provider-aws.sigs.k8s.io
      instanceType: t3.medium
      sshKeyName: default
      rootVolume:
        size: 32
      ami:
        id: {{.amiID}}