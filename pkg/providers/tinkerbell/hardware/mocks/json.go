// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/tinkerbell/hardware/json.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	hardware "github.com/aws/eks-anywhere/pkg/providers/tinkerbell/hardware"
	gomock "github.com/golang/mock/gomock"
)

// MockTinkerbellHardwareJsonFactory is a mock of TinkerbellHardwareJsonFactory interface.
type MockTinkerbellHardwareJsonFactory struct {
	ctrl     *gomock.Controller
	recorder *MockTinkerbellHardwareJsonFactoryMockRecorder
}

// MockTinkerbellHardwareJsonFactoryMockRecorder is the mock recorder for MockTinkerbellHardwareJsonFactory.
type MockTinkerbellHardwareJsonFactoryMockRecorder struct {
	mock *MockTinkerbellHardwareJsonFactory
}

// NewMockTinkerbellHardwareJsonFactory creates a new mock instance.
func NewMockTinkerbellHardwareJsonFactory(ctrl *gomock.Controller) *MockTinkerbellHardwareJsonFactory {
	mock := &MockTinkerbellHardwareJsonFactory{ctrl: ctrl}
	mock.recorder = &MockTinkerbellHardwareJsonFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTinkerbellHardwareJsonFactory) EXPECT() *MockTinkerbellHardwareJsonFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTinkerbellHardwareJsonFactory) Create(name string) (*hardware.TinkerbellHardwareJson, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", name)
	ret0, _ := ret[0].(*hardware.TinkerbellHardwareJson)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Create indicates an expected call of Create.
func (mr *MockTinkerbellHardwareJsonFactoryMockRecorder) Create(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTinkerbellHardwareJsonFactory)(nil).Create), name)
}
