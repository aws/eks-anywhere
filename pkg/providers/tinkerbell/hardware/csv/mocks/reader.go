// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/tinkerbell/hardware/csv/reader.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRecordReader is a mock of RecordReader interface.
type MockRecordReader struct {
	ctrl     *gomock.Controller
	recorder *MockRecordReaderMockRecorder
}

// MockRecordReaderMockRecorder is the mock recorder for MockRecordReader.
type MockRecordReaderMockRecorder struct {
	mock *MockRecordReader
}

// NewMockRecordReader creates a new mock instance.
func NewMockRecordReader(ctrl *gomock.Controller) *MockRecordReader {
	mock := &MockRecordReader{ctrl: ctrl}
	mock.recorder = &MockRecordReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecordReader) EXPECT() *MockRecordReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockRecordReader) Read() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockRecordReaderMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockRecordReader)(nil).Read))
}
