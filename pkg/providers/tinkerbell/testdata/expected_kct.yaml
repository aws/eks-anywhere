apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: test
    pool: test
  name: test-test
  namespace: eksa-system
spec:
  clusterName: test
  replicas: 1
  selector:
    matchLabels: {}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: test
        pool: test
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: test-test-1
      clusterName: test
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: TinkerbellMachineTemplate
        name: test-test-1
      version: v1.21.2-eks-1-21-4
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: TinkerbellMachineTemplate
metadata:
  name: test-test-1
  namespace: eksa-system
spec:
  template:
    spec:
      hardwareAffinity:
        required:
        - labelSelector:
            matchLabels: 
      bootOptions:
        bootMode: netboot
      templateOverride: |
        global_timeout: 6000
        id: ""
        name: test
        tasks:
        - actions:
          - environment:
              COMPRESSED: "true"
              DEST_DISK: '{{ index .Hardware.Disks 0 }}'
              IMG_URL: https://ubuntu-1-21.gz
            image: 127.0.0.1/embedded/image2disk
            name: stream image to disk
            timeout: 600
          - environment:
              DEST_DISK: '{{ formatPartition ( index .Hardware.Disks 0 ) 2 }}'
              DEST_PATH: /etc/netplan/config.yaml
              DIRMODE: "0755"
              FS_TYPE: ext4
              GID: "0"
              MODE: "0644"
              STATIC_NETPLAN: "true"
              UID: "0"
            image: 127.0.0.1/embedded/writefile
            name: write netplan config
            pid: host
            timeout: 90
          - environment:
              CONTENTS: 'network: {config: disabled}'
              DEST_DISK: '{{ formatPartition ( index .Hardware.Disks 0 ) 2 }}'
              DEST_PATH: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
              DIRMODE: "0700"
              FS_TYPE: ext4
              GID: "0"
              MODE: "0600"
              UID: "0"
            image: 127.0.0.1/embedded/writefile
            name: disable cloud-init network capabilities
            timeout: 90
          - environment:
              CONTENTS: |
                datasource:
                  Ec2:
                    metadata_urls: [http://0.0.0.0:50061,http://5.6.7.8:50061]
                    strict_id: false
                manage_etc_hosts: localhost
                warnings:
                  dsid_missing_source: off
              DEST_DISK: '{{ formatPartition ( index .Hardware.Disks 0 ) 2 }}'
              DEST_PATH: /etc/cloud/cloud.cfg.d/10_tinkerbell.cfg
              DIRMODE: "0700"
              FS_TYPE: ext4
              GID: "0"
              MODE: "0600"
              UID: "0"
            image: 127.0.0.1/embedded/writefile
            name: add cloud-init config
            timeout: 90
          - environment:
              CONTENTS: |
                datasource: Ec2
              DEST_DISK: '{{ formatPartition ( index .Hardware.Disks 0 ) 2 }}'
              DEST_PATH: /etc/cloud/ds-identify.cfg
              DIRMODE: "0700"
              FS_TYPE: ext4
              GID: "0"
              MODE: "0600"
              UID: "0"
            image: 127.0.0.1/embedded/writefile
            name: add cloud-init ds config
            timeout: 90
          - image: 127.0.0.1/embedded/reboot
            name: reboot
            pid: host
            timeout: 90
            volumes:
            - /worker:/worker
          name: test
          volumes:
          - /dev:/dev
          - /dev/console:/dev/console
          - /lib/firmware:/lib/firmware:ro
          worker: '{{.device_1}}'
        version: "0.1"
        
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: test-test-1
  namespace: eksa-system
spec:
  template:
    spec:
      joinConfiguration:
        patches:
          directory: /etc/kubernetes/patches
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: PROVIDER_ID
      files:
        - content: |
            apiVersion: kubelet.config.k8s.io/v1beta1
            kind: KubeletConfiguration
            maxPods: 20
            resolvConf: test-path
            tlsCipherSuites:
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            
          owner: root:root
          permissions: "0644"
          path: /etc/kubernetes/patches/kubeletconfiguration0+strategic.yaml
      users:
      - name: user
        sshAuthorizedKeys:
        - 'ssh abcdef...'
        sudo: ALL=(ALL) NOPASSWD:ALL
      format: cloud-config

---
