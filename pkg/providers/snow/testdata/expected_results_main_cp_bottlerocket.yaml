apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  creationTimestamp: null
  labels:
    cluster.anywhere.eks.amazonaws.com/cluster-name: snow-test
    cluster.anywhere.eks.amazonaws.com/cluster-namespace: test-namespace
    cluster.x-k8s.io/cluster-name: snow-test
  name: snow-test
  namespace: eksa-system
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.1.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneEndpoint:
    host: ""
    port: 0
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: snow-test
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AWSSnowCluster
    name: snow-test
status:
  controlPlaneReady: false
  infrastructureReady: false
  managedExternalEtcdInitialized: false
  managedExternalEtcdReady: false

---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  creationTimestamp: null
  name: snow-test
  namespace: eksa-system
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer: {}
      bottlerocketAdmin:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-admin
        imageTag: 0.0.1
      bottlerocketBootstrap:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-bootstrap
        imageTag: 0.0.1
      bottlerocketControl:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-control
        imageTag: 0.0.1
      bottlerocketCustomBootstrapContainers:
      - essential: false
        imageRepository: public.ecr.aws/l0g8r8j6/bottlerocket-bootstrap-snow
        imageTag: v1-20-22-eks-a-v0.0.0-dev-build.4984
        mode: always
        name: bottlerocket-bootstrap-snow
      certificatesDir: /var/lib/kubeadm/pki
      controllerManager:
        extraArgs:
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        extraVolumes:
        - hostPath: /var/lib/kubeadm/controller-manager.conf
          mountPath: /etc/kubernetes/controller-manager.conf
          name: kubeconfig
          pathType: File
          readOnly: true
      dns:
        imageRepository: public.ecr.aws/eks-distro/coredns
        imageTag: v1.8.4-eks-1-21-9
      etcd:
        local:
          extraArgs:
            cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            listen-client-urls: https://0.0.0.0:2379
            listen-peer-urls: https://0.0.0.0:2380
          imageRepository: public.ecr.aws/eks-distro/etcd-io
          imageTag: v3.4.16-eks-1-21-9
      imageRepository: public.ecr.aws/eks-distro/kubernetes
      networking: {}
      pause:
        imageRepository: public.ecr.aws/eks-distro/kubernetes/pause
        imageTag: 0.0.1
      proxy: {}
      registryMirror: {}
      scheduler:
        extraVolumes:
        - hostPath: /var/lib/kubeadm/scheduler.conf
          mountPath: /etc/kubernetes/scheduler.conf
          name: kubeconfig
          pathType: File
          readOnly: true
    files:
    - content: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_cidr
              value: "32"
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: vip_ddns
              value: "false"
            - name: vip_leaderelection
              value: "true"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            - name: address
              value: 1.2.3.4
            image: public.ecr.aws/l0g8r8j6/kube-vip/kube-vip:v0.3.7-eks-a-v0.0.0-dev-build.1433
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
            name: kubeconfig
        status: {}
      owner: root:root
      path: /etc/kubernetes/manifests/kube-vip.yaml
    format: bottlerocket
    initConfiguration:
      localAPIEndpoint: {}
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: aws-snow:////'{{ ds.meta_data.instance_id }}'
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    joinConfiguration:
      bottlerocketAdmin:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-admin
        imageTag: 0.0.1
      bottlerocketBootstrap:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-bootstrap
        imageTag: 0.0.1
      bottlerocketControl:
        imageRepository: public.ecr.aws/eks-anywhere/bottlerocket-control
        imageTag: 0.0.1
      bottlerocketCustomBootstrapContainers:
      - essential: false
        imageRepository: public.ecr.aws/l0g8r8j6/bottlerocket-bootstrap-snow
        imageTag: v1-20-22-eks-a-v0.0.0-dev-build.4984
        mode: always
        name: bottlerocket-bootstrap-snow
      discovery: {}
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: aws-snow:////'{{ ds.meta_data.instance_id }}'
          tls-cipher-suites: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      pause:
        imageRepository: public.ecr.aws/eks-distro/kubernetes/pause
        imageTag: 0.0.1
      proxy: {}
      registryMirror: {}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AWSSnowMachineTemplate
      name: snow-test-control-plane-1
    metadata: {}
  replicas: 3
  version: v1.21.5-eks-1-21-9
status:
  initialized: false
  ready: false
  readyReplicas: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSSnowCluster
metadata:
  creationTimestamp: null
  name: snow-test
  namespace: eksa-system
spec:
  controlPlaneEndpoint:
    host: 1.2.3.4
    port: 6443
  identityRef:
    kind: Secret
    name: snow-test-snow-credentials
  region: snow
status:
  ready: false

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSSnowMachineTemplate
metadata:
  creationTimestamp: null
  name: snow-test-control-plane-1
  namespace: eksa-system
spec:
  template:
    spec:
      ami:
        id: eks-d-v1-21-5-ubuntu-ami-02833ca9a8f29c2ea
      cloudInit:
        insecureSkipSecretsManager: true
      devices:
      - 1.2.3.4
      - 1.2.3.5
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      imageLookupBaseOS: bottlerocket
      instanceType: sbe-c.large
      network:
        directNetworkInterfaces:
        - dhcp: true
          index: 1
          primary: true
      osFamily: bottlerocket
      physicalNetworkConnectorType: SFP_PLUS
      sshKeyName: default

---
apiVersion: v1
data:
  ca-bundle: Y2VydHM=
  credentials: Y3JlZHM=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: snow-test-snow-credentials
  namespace: eksa-system
type: Opaque

---
