// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/snow/snow.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	kubernetes "github.com/aws/eks-anywhere/pkg/clients/kubernetes"
	gomock "github.com/golang/mock/gomock"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// MockKubeUnAuthClient is a mock of KubeUnAuthClient interface.
type MockKubeUnAuthClient struct {
	ctrl     *gomock.Controller
	recorder *MockKubeUnAuthClientMockRecorder
}

// MockKubeUnAuthClientMockRecorder is the mock recorder for MockKubeUnAuthClient.
type MockKubeUnAuthClientMockRecorder struct {
	mock *MockKubeUnAuthClient
}

// NewMockKubeUnAuthClient creates a new mock instance.
func NewMockKubeUnAuthClient(ctrl *gomock.Controller) *MockKubeUnAuthClient {
	mock := &MockKubeUnAuthClient{ctrl: ctrl}
	mock.recorder = &MockKubeUnAuthClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeUnAuthClient) EXPECT() *MockKubeUnAuthClientMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockKubeUnAuthClient) Delete(ctx context.Context, name, namespace, kubeconfig string, obj runtime.Object) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, name, namespace, kubeconfig, obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockKubeUnAuthClientMockRecorder) Delete(ctx, name, namespace, kubeconfig, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockKubeUnAuthClient)(nil).Delete), ctx, name, namespace, kubeconfig, obj)
}

// KubeconfigClient mocks base method.
func (m *MockKubeUnAuthClient) KubeconfigClient(kubeconfig string) kubernetes.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "KubeconfigClient", kubeconfig)
	ret0, _ := ret[0].(kubernetes.Client)
	return ret0
}

// KubeconfigClient indicates an expected call of KubeconfigClient.
func (mr *MockKubeUnAuthClientMockRecorder) KubeconfigClient(kubeconfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "KubeconfigClient", reflect.TypeOf((*MockKubeUnAuthClient)(nil).KubeconfigClient), kubeconfig)
}
