// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/snow/aws.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAwsClient is a mock of AwsClient interface.
type MockAwsClient struct {
	ctrl     *gomock.Controller
	recorder *MockAwsClientMockRecorder
}

// MockAwsClientMockRecorder is the mock recorder for MockAwsClient.
type MockAwsClientMockRecorder struct {
	mock *MockAwsClient
}

// NewMockAwsClient creates a new mock instance.
func NewMockAwsClient(ctrl *gomock.Controller) *MockAwsClient {
	mock := &MockAwsClient{ctrl: ctrl}
	mock.recorder = &MockAwsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAwsClient) EXPECT() *MockAwsClientMockRecorder {
	return m.recorder
}

// EC2ImageExists mocks base method.
func (m *MockAwsClient) EC2ImageExists(ctx context.Context, keyName string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EC2ImageExists", ctx, keyName)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EC2ImageExists indicates an expected call of EC2ImageExists.
func (mr *MockAwsClientMockRecorder) EC2ImageExists(ctx, keyName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EC2ImageExists", reflect.TypeOf((*MockAwsClient)(nil).EC2ImageExists), ctx, keyName)
}

// EC2ImportKeyPair mocks base method.
func (m *MockAwsClient) EC2ImportKeyPair(ctx context.Context, keyName string, keyMaterial []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EC2ImportKeyPair", ctx, keyName, keyMaterial)
	ret0, _ := ret[0].(error)
	return ret0
}

// EC2ImportKeyPair indicates an expected call of EC2ImportKeyPair.
func (mr *MockAwsClientMockRecorder) EC2ImportKeyPair(ctx, keyName, keyMaterial interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EC2ImportKeyPair", reflect.TypeOf((*MockAwsClient)(nil).EC2ImportKeyPair), ctx, keyName, keyMaterial)
}

// EC2KeyNameExists mocks base method.
func (m *MockAwsClient) EC2KeyNameExists(ctx context.Context, imageID string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EC2KeyNameExists", ctx, imageID)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EC2KeyNameExists indicates an expected call of EC2KeyNameExists.
func (mr *MockAwsClientMockRecorder) EC2KeyNameExists(ctx, imageID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EC2KeyNameExists", reflect.TypeOf((*MockAwsClient)(nil).EC2KeyNameExists), ctx, imageID)
}
