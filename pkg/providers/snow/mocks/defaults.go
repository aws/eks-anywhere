// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/snow/defaults.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	filewriter "github.com/aws/eks-anywhere/pkg/filewriter"
	gomock "github.com/golang/mock/gomock"
)

// MockSshKeyGenerator is a mock of SshKeyGenerator interface.
type MockSshKeyGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockSshKeyGeneratorMockRecorder
}

// MockSshKeyGeneratorMockRecorder is the mock recorder for MockSshKeyGenerator.
type MockSshKeyGeneratorMockRecorder struct {
	mock *MockSshKeyGenerator
}

// NewMockSshKeyGenerator creates a new mock instance.
func NewMockSshKeyGenerator(ctrl *gomock.Controller) *MockSshKeyGenerator {
	mock := &MockSshKeyGenerator{ctrl: ctrl}
	mock.recorder = &MockSshKeyGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSshKeyGenerator) EXPECT() *MockSshKeyGeneratorMockRecorder {
	return m.recorder
}

// GenerateSSHAuthKey mocks base method.
func (m *MockSshKeyGenerator) GenerateSSHAuthKey(arg0 filewriter.FileWriter) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSSHAuthKey", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSSHAuthKey indicates an expected call of GenerateSSHAuthKey.
func (mr *MockSshKeyGeneratorMockRecorder) GenerateSSHAuthKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSSHAuthKey", reflect.TypeOf((*MockSshKeyGenerator)(nil).GenerateSSHAuthKey), arg0)
}
